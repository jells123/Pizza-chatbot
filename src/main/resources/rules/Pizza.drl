package pl.poznan.put.cs.si.puttalky
 
import pl.poznan.put.cs.si.puttalky.Fakt;
import pl.poznan.put.cs.si.puttalky.Zamowienie; 
import pl.poznan.put.cs.si.puttalky.Ciasto;
import pl.poznan.put.cs.si.puttalky.Dodatek;
import pl.poznan.put.cs.si.puttalky.BazaWiedzy;

import java.util.Set;
import java.util.HashSet;


/** Author: agalawrynowicz<br>
 * Date: 19-Dec-2016 */

rule "start"
	salience 3
	
	when
		not Fakt(nazwa=="start")
		zamowienie : Zamowienie()
	then
		zamowienie.powitanie();
		System.out.println();
		System.out.println();
		insert(new Fakt("start", "0"));
end

rule "Podano nazwe pizzy"
    salience 2

    when
        f : Fakt(nazwa == "nazwano_pizze")
        baza : BazaWiedzy()
        eval( baza.jestNazwanaPizza(f.getWartosc()) )
    then
        insert(new Fakt("pizza_propozycja", f.getWartosc()));
        System.out.println("Dobrze, zamawiam konkretna pizze: " + f.getWartosc());
end

rule "Podano typ pizzy"
    salience 2

    when
        f : Fakt(nazwa == "nazwano_pizze")
        baza : BazaWiedzy()
        eval( baza.jestTypemPizzy(f.getWartosc()) )
    then
        insert(new Fakt("typ_pizzy", f.getWartosc()));
end

rule "Podano zakazany typ pizzy"
    salience 2

    when
        f : Fakt(nazwa == "zakazano_pizze")
        baza : BazaWiedzy()
        eval( baza.jestTypemPizzy(f.getWartosc().substring(1)))
    then
        insert(new Fakt("zakazany_typ_pizzy", f.getWartosc()));
end

rule "Brak dodatku"
    salience 2
    when
    	f : Fakt(nazwa == "dodatek", getWartosci().size() == 0)
    	Fakt(nazwa == "zakazany_dodatek", getWartosci().size() == 0) // nie zakazano zadnego dodatku

    	not Fakt(nazwa == "nazwano_pizze")
    	not Fakt(nazwa == "typ_pizzy")

    	not Fakt(nazwa == "zakazano_pizze")

        dodatek : Dodatek(getMonit() == "Jaki dodatek powinna zawierać Twoja pizza?:\n", znalezionoDodatek() == false)
        parser : Parser()
    then
        System.out.println("Ojojoj, wygląda na to, że nie mamy dodatku " + String.join(" ", parser.getSlowaKluczowe()) + "... :c");
        f.setWartosc(String.join(" ", parser.getSlowaKluczowe()));
        update(f);
end

rule "Podaj dodatki"
	salience 2
	
	when
		not Fakt(nazwa == "dodatek")
		not Fakt(nazwa == "nazwano_pizze")
		dodatek : Dodatek(znalezionoDodatek() == false)
		parser : Parser()
		baza : BazaWiedzy()
	then
        dodatek.setMonit("Jaki dodatek powinna zawierać Twoja pizza?:\n");
        dodatek.zadajPytanie();
        parser.przetworzOdpowiedz();

        dodatek.setZnaleziono(false);

        Set<String> znalezioneDodatki = new HashSet<String>();
		Set<String> zakazaneDodatki = new HashSet<String>();

		for (String slowo : parser.getSlowaKluczowe()) {
		    for (String uriKlasy : baza.dopasujDodatek(slowo)) {
                znalezioneDodatki.add(uriKlasy);
                dodatek.setZnaleziono(true);
            }
            for (String uriKlasy : baza.dopasujZakazanyDodatek(slowo)) {
                zakazaneDodatki.add(uriKlasy);
            }

            for (String uriKlasy : baza.dopasujPizze(slowo)) {
                insert(new Fakt("nazwano_pizze", uriKlasy));
            }

            for (String uriKlasy : baza.dopasujZakazanaPizze(slowo)) {
                insert(new Fakt("zakazano_pizze", uriKlasy));
            }

		}
		insert(new Fakt("dodatek", znalezioneDodatki));
		insert(new Fakt("zakazany_dodatek", zakazaneDodatki));
		//@TODO	brak dopasowania
		update(dodatek);
end

rule "Podaj rodzaj ciasta"
	salience 2
	
	when
		not Fakt(nazwa == "rodzaj_ciasta")
		ciasto : Ciasto()
		parser : Parser()
	then
		  ciasto.setMonit("Podaj rodzaj ciasta:\n");
		  ciasto.zadajPytanie();
		  parser.przetworzOdpowiedz();
		 
		for (String slowo : parser.getSlowaKluczowe()){
			if (slowo.equals("cienki")){
		       insert(new Fakt("rodzaj_ciasta", "cienkie"));
			} else if (slowo.equals("gruby")) {
		       insert(new Fakt("rodzaj_ciasta", "grube"));
			}
		}
					
		//@TODO	brak dopasowania
		
		update(ciasto);
end

rule "Polecana pizza wedlug typu"
    salience 1

    when
        f : Fakt(nazwa == "typ_pizzy")
        baza : BazaWiedzy()
    then
        System.out.println("Podano typ pizzy: " + f.getWartosc());
        Set<String> pizze = baza.wyszukajPizzePoTypie(f.getWartosc());

        if (pizze.size()>1){
            for (String nazwaPizzy : pizze) {
                insert(new Fakt("pizza_propozycja", nazwaPizzy));
                if (!nazwaPizzy.equals("Nothing")){
                   System.out.println("Polecam pizzę:"+nazwaPizzy);
                }
            }
        }
        else {
            System.out.println("Wyglada na to, ze nie ma pizzy takiego typu. (???)");
            insert(new Fakt("pizza_propozycja", "... nie wiem o co Ci chodzi :/"));
        }

end

rule "Polecana pizza wedlug zakazanego typu"
    salience 1

    when
        f : Fakt(nazwa == "zakazany_typ_pizzy")
        baza : BazaWiedzy()
    then
        System.out.println("[BEZ] Podano typ pizzy: " + f.getWartosc());
        Set<String> pizze = baza.wyszukajPizzePoZakazanymTypie(f.getWartosc());

        if (pizze.size()>=1){
            for (String nazwaPizzy : pizze) {
                insert(new Fakt("pizza_propozycja", nazwaPizzy));
                if (!nazwaPizzy.equals("Nothing")){
                   System.out.println("[BEZ] Polecam pizzę:"+nazwaPizzy);
                }
            }
        }
        else {
            System.out.println("[BEZ] Wyglada na to, ze nie ma pizzy takiego typu. (???)");
            insert(new Fakt("pizza_propozycja", "... nie wiem o co Ci chodzi :/"));
        }

end

rule "Polecana pizza wedlug dodatkow"
	salience 1
	
	when
		Fakt(nazwa == "dodatek") && 
		Fakt(nazwa == "rodzaj_ciasta") && 	
		not Fakt(nazwa == "pizza_propozycja") &&
        $dodatek : Fakt( nazwa == "dodatek") &&
        zakazany_dodatek : Fakt(nazwa == "zakazany_dodatek")
 		
		baza: BazaWiedzy()
		pizza: Pizza()
	then

    	Set<String> pizze = baza.wyszukajPizzePoWieluDodatkach($dodatek.getWartosci(), zakazany_dodatek.getWartosci());

        if (pizze.size()>1){            		
			for (String nazwaPizzy : pizze) {
		    	if (!nazwaPizzy.equals("Nothing")){
  					insert(new Fakt("pizza_propozycja", nazwaPizzy));
		       	    System.out.println("Polecam pizzę:"+nazwaPizzy);
		       	}
		    }
		}
		else {
			System.out.println("Dobrze, zrobimy pizzę specjalną z dodatkami: " + $dodatek.getWartosciString());
	    }

end


rule "zakończenie"

	when
		not (Fakt(nazwa == "koniec")) &&
		Fakt(nazwa == "pizza_propozycja") 

		zamowienie : Zamowienie()
	then
		insert(new Fakt("koniec", "0"));
		zamowienie.pozegnanie();
end

